CHIP P2S {
    IN indata[4], enable, load;
    OUT sout, complete;
    PARTS:
    // Store input bits when load is asserted
    Bit(in=indata[0], load=load, out=bit0);
    Bit(in=indata[1], load=load, out=bit1);
    Bit(in=indata[2], load=load, out=bit2);
    Bit(in=indata[3], load=load, out=bit3);

    // State tracking bits
    Bit(in=true, load=load, out=state0);
    Bit(in=state0, load=enable, out=state1);
    Bit(in=state1, load=enable, out=state2);
    Bit(in=state2, load=enable, out=state3);
    
    // Bit output selection
    Mux(a=bit0, b=bit1, sel=state1, out=out1);
    Mux(a=out1, b=bit2, sel=state2, out=out2);
    Mux(a=out2, b=bit3, sel=state3, out=sout);
    
    // Complete signal logic
    And(a=state3, b=enable, out=complete);
}