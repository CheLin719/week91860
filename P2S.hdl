CHIP P2S {
    IN indata[4], enable, load;
    OUT sout, complete;

    PARTS:

    // Register to store the 4-bit input when load is asserted
    Bit(in=indata[0], load=load, out=storedData0);
    Bit(in=indata[1], load=load, out=storedData1);
    Bit(in=indata[2], load=load, out=storedData2);
    Bit(in=indata[3], load=load, out=storedData3);

    // 2-bit counter to track the current bit being output
    Bit(in=notBit0, load=enable, out=bit0);
    Not(in=bit0, out=notBit0);

    And(a=bit0, b=enable, out=bit1Load);
    Bit(in=notBit1, load=bit1Load, out=bit1);
    Not(in=bit1, out=notBit1);

    // Multiplexer to select the correct bit from storedData
    Mux(a=storedData0, b=storedData1, sel=bit0, out=muxOut1);
    Mux(a=storedData2, b=storedData3, sel=bit0, out=muxOut2);
    Mux(a=muxOut1, b=muxOut2, sel=bit1, out=sout);

    // Generate complete signal when all bits have been transmitted
    And(a=bit0, b=bit1, out=completeSignal);
    And(a=completeSignal, b=enable, out=complete);
} 
