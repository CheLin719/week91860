CHIP P2S {
    IN indata[4], enable, load;
    OUT sout, complete;

    PARTS:
    
    // Individual bit registers for 4-bit input
    Bit(in=indata[0], load=load, out=shiftOut0);
    Bit(in=indata[1], load=load, out=shiftOut1);
    Bit(in=indata[2], load=load, out=shiftOut2);
    Bit(in=indata[3], load=load, out=shiftOut3);

    // 2-bit counter for bit selection
    Counter(width=2, enable=enable, reset=load, out=count);

    // Multiplexing logic to select the correct bit for sout
    Mux4Way(
        a=shiftOut0,
        b=shiftOut1,
        c=shiftOut2,
        d=shiftOut3,
        sel=count,
        out=sout
    );

    // Generate the complete signal when all bits are output
    And(a=count[0], b=count[1], out=complete_signal);
    And(a=complete_signal, b=enable, out=complete);
} 