CHIP P2S {
    IN indata[4], enable, load;
    OUT sout, complete;

    PARTS:

    // Register to store the 4-bit input when load is asserted
    Register(in=indata, load=load, out=storedData);

    // 2-bit counter to track the current bit being output
    Bit(in=notBit0, load=enable, out=bit0);
    Not(in=bit0, out=notBit0);

    And(a=bit0, b=enable, out=bit1Load);
    Bit(in=notBit1, load=bit1Load, out=bit1);
    Not(in=bit1, out=notBit1);

    // Generate the mux selection signals from the counter bits
    Or(a=bit0, b=false, out=sel0);
    Or(a=bit1, b=false, out=sel1);

    // Multiplexer to select the correct bit from storedData
    Mux4Way(
        a=storedData[0],
        b=storedData[1],
        c=storedData[2],
        d=storedData[3],
        sel[0]=sel0,
        sel[1]=sel1,
        out=sout
    );

    // Generate complete signal when all bits have been transmitted
    And(a=bit0, b=bit1, out=completeSignal);
    And(a=completeSignal, b=enable, out=complete);
} 
