CHIP P2S {
    IN indata[4], enable, load;
    OUT sout, complete;
    PARTS:
    // Store input bits
    Bit(in=indata[0], load=load, out=bit0);
    Bit(in=indata[1], load=load, out=bit1);
    Bit(in=indata[2], load=load, out=bit2);
    Bit(in=indata[3], load=load, out=bit3);
    
    // Bit selection logic
    Not(in=enable, out=notEnable);
    
    // First bit selection
    Mux(a=false, b=bit0, sel=enable, out=firstBit);
    
    // Second bit selection
    Mux(a=firstBit, b=bit1, sel=enable, out=secondBit);
    
    // Third bit selection
    Mux(a=secondBit, b=bit2, sel=enable, out=thirdBit);
    
    // Fourth bit and output selection
    Mux(a=thirdBit, b=bit3, sel=enable, out=sout);
    
    // Complete signal logic
    And(a=enable, b=notEnable, out=complete);
}